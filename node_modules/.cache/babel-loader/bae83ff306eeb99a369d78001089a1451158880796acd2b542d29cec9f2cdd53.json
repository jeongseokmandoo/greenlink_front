{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/Page6.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport AccountNav from \"../components/AccountNav\";\nimport { Input2 } from \"../components/AccountInput\";\nimport { useState } from \"react\";\nimport BigBtn from \"../components/BigBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page6(props) {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const navigate = useNavigate();\n  const resetpassword = () => {\n    if (!phoneNumber || !password) {\n      alert(\"모든 값을 입력해주세요\");\n    } else if (phoneNumber.length !== 11 || !phoneNumber.startsWith(\"010\")) {\n      alert(\"전화번호를 올바른 형식으로 입력해주세요.\");\n    } else if (password.length < 8 || password.length > 12) {\n      alert(\"비밀번호는 8자 이상, 12자 이하여야 합니다.\");\n    } else if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password) || !/[A-Z]/.test(password)) {\n      alert(\"비밀번호에 특수문자와 대문자가 최소 하나 이상 포함되어야 합니다. \");\n    } else {\n      localStorage.setItem(\"phoneNumber\", phoneNumber);\n      localStorage.setItem(\"password\", password);\n      localStorage.setItem(\"passwordConfirm\", passwordConfirm);\n      const data = {\n        phoneNumber: localStorage.getItem(\"phoneNumber\"),\n        password: localStorage.getItem(\"password\"),\n        passwordConfirm: localStorage.getItem(\"passwordConfirm\")\n      };\n      console.log(data);\n      fetch(\"백엔드_URL\", {\n        method: \"POST\",\n        headers: {\n          // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\n          \"Content-Type\": \"application/json\" // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\n        },\n\n        body: JSON.stringify(data),\n        // 보낼 데이터 json으로 변형\n        mode: \"cors\" // 보안 때문에 붙이기!!\n      })\n      //로그인 정보 확인 로직 필요\n      .then(response => {\n        //성공적으로 로그인할 때\n        if (response.ok) {\n          alert(\"비밀번호 변경에 성공하셨습니다.\");\n          navigate(\"/plant1\");\n        }\n        //로그인 실패했을 때\n        else {\n          throw new Error(\"비밀번호 변경에 실패했습니다.\");\n        }\n      }).catch(error => {\n        console.error(error);\n        alert(\"죄송합니다. 비밀번호 변경에 실패하셨습니다.\");\n        navigate(\"/5\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AccountNav, {\n      text1: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\",\n      text2: \" \",\n      link1: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"25vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"\\uC804\\uD654\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value),\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigBtn, {\n      onClick: resetpassword,\n      text: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Page6, \"dzKXZe4O0Xp+Pvb7bYk2SwvostQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Page6;\nexport default Page6;\nvar _c;\n$RefreshReg$(_c, \"Page6\");","map":{"version":3,"names":["React","AccountNav","Input2","useState","BigBtn","useNavigate","jsxDEV","_jsxDEV","Page6","props","_s","phoneNumber","setPhoneNumber","password","setPassword","passwordConfirm","setPasswordConfirm","navigate","resetpassword","alert","length","startsWith","test","localStorage","setItem","data","getItem","console","log","fetch","method","headers","body","JSON","stringify","mode","then","response","ok","Error","catch","error","children","text1","text2","link1","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","type","value","onChange","e","target","placeholder","onClick","text","_c","$RefreshReg$"],"sources":["/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/Page6.js"],"sourcesContent":["import React from \"react\";\r\nimport AccountNav from \"../components/AccountNav\";\r\nimport { Input2 } from \"../components/AccountInput\";\r\nimport { useState } from \"react\";\r\nimport BigBtn from \"../components/BigBtn\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Page6(props) {\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const resetpassword = () => {\r\n    if (!phoneNumber || !password) {\r\n      alert(\"모든 값을 입력해주세요\");\r\n    } else if (phoneNumber.length !== 11 || !phoneNumber.startsWith(\"010\")) {\r\n      alert(\"전화번호를 올바른 형식으로 입력해주세요.\");\r\n    } else if (password.length < 8 || password.length > 12) {\r\n      alert(\"비밀번호는 8자 이상, 12자 이하여야 합니다.\");\r\n    } else if (\r\n      !/[!@#$%^&*(),.?\":{}|<>]/.test(password) ||\r\n      !/[A-Z]/.test(password)\r\n    ) {\r\n      alert(\r\n        \"비밀번호에 특수문자와 대문자가 최소 하나 이상 포함되어야 합니다. \"\r\n      );\r\n    } else {\r\n      localStorage.setItem(\"phoneNumber\", phoneNumber);\r\n      localStorage.setItem(\"password\", password);\r\n      localStorage.setItem(\"passwordConfirm\", passwordConfirm);\r\n      const data = {\r\n        phoneNumber: localStorage.getItem(\"phoneNumber\"),\r\n        password: localStorage.getItem(\"password\"),\r\n        passwordConfirm: localStorage.getItem(\"passwordConfirm\"),\r\n      };\r\n      console.log(data);\r\n      fetch(\"백엔드_URL\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\r\n          \"Content-Type\": \"application/json\", // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\r\n        },\r\n        body: JSON.stringify(data), // 보낼 데이터 json으로 변형\r\n        mode: \"cors\", // 보안 때문에 붙이기!!\r\n      })\r\n        //로그인 정보 확인 로직 필요\r\n        .then((response) => {\r\n          //성공적으로 로그인할 때\r\n          if (response.ok) {\r\n            alert(\"비밀번호 변경에 성공하셨습니다.\");\r\n            navigate(\"/plant1\");\r\n          }\r\n          //로그인 실패했을 때\r\n          else {\r\n            throw new Error(\"비밀번호 변경에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(\"죄송합니다. 비밀번호 변경에 실패하셨습니다.\");\r\n          navigate(\"/5\");\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <AccountNav text1=\"비밀번호 재설정\" text2=\" \" link1=\"/\" />\r\n      <div style={{ marginTop: \"25vh\" }}>\r\n        <Input2\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"전화번호\"\r\n        />\r\n        <Input2\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"비밀번호\"\r\n        />\r\n        <Input2\r\n          type=\"password\"\r\n          value={passwordConfirm}\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n          placeholder=\"비밀번호 확인\"\r\n        />\r\n      </div>\r\n      <BigBtn onClick={resetpassword} text=\"비밀번호 재설정\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page6;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AccountNav from \"../components/AccountNav\";\nimport { Input2 } from \"../components/AccountInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport BigBtn from \"../components/BigBtn\";\n\n// 토큰 관련된 건 대부분 백에서 만들어주면 프론트에서 받아서 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ptag1 = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  fontSize: \"calc(1.5vh + 1.25vw)\",\n  fontWeight: \"bold\",\n  marginTop: \"25vh\",\n  marginBottom: \"2.5vh\"\n};\nconst ptag2 = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  fontSize: \"calc(1vh + 1.25vw)\",\n  marginBottom: \"2.5vh\"\n};\nfunction Page4(props) {\n  _s();\n  const [plantnumber, setPlantnumber] = useState(\"\"); //화분번호 state\n  const navigate = useNavigate();\n\n  // 가입하기 버튼 누르면 시행되는 함수\n  const start = () => {\n    // 화분번호가 없으면\n    if (!plantnumber) {\n      alert(\"화분번호를 입력해주세요.\");\n    } // 화분번호가 있으면\n    else {\n      //로컬 스토리지에 데이터 저장 (왼쪽: 키, 오른쪽: 데이터)\n      localStorage.setItem(\"flower_pot\", plantnumber);\n\n      //백에 보낼 data 정의\n      const data = {\n        phoneNumber: localStorage.getItem(\"flower_pot\"),\n        password: localStorage.getItem(\"password\"),\n        namebox: localStorage.getItem(\"namebox\"),\n        Profile_picture: localStorage.getItem(\"Profile_picture\"),\n        flower_pot: localStorage.getItem(\"flower_pot\")\n      };\n      console.log(data); // data 양식 확인\n      // 백에 회원가입 데이터 보내는 부분 !!URL 추가해야 함.\n      fetch(\"백엔드_URL\", {\n        method: \"POST\",\n        headers: {\n          // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\n          \"Content-Type\": \"application/json\" // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\n        },\n\n        body: JSON.stringify(data),\n        // 보낼 데이터 json으로 변형\n        mode: \"cors\" // 보안 때문에 붙이기!!\n      })\n      // 중복하는 전화번호 있을 때 회원가입 안되도록 하는 로직 추가 필요\n      .then(response => {\n        //성공적으로 백에 데이터 보냈을 때\n        if (response.ok) {\n          response.json().then(data => {\n            if (data.token && data.token.access) {\n              alert(data.message); // 회원가입 성공\n              navigate(\"/5\");\n            } else {\n              throw new Error(\"회원가입에 실패하셨습니다.\"); //회원가입 실패\n            }\n          });\n        }\n        // 데이터 보내기 실패했을 때\n        else {\n          throw new Error(\"데이터를 백엔드로 보내는데 실패했습니다.\");\n        }\n      }).catch(error => {\n        console.error(error);\n        alert(\"죄송합니다. 회원가입을 다시 해주세요.\");\n        navigate(\"/2\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AccountNav, {\n      text1: \"\\uACC4\\uC815\\uB9CC\\uB4E4\\uAE30\",\n      text2: \"\\uB85C\\uADF8\\uC778\",\n      link1: \"/5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ptag1,\n      children: \"\\uD654\\uBD84 \\uD558\\uB2E8\\uC758 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input2, {\n      type: \"text\",\n      value: plantnumber,\n      onChange: e => setPlantnumber(e.target.value),\n      placeholder: \"\\uD654\\uBD84\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ptag2,\n      children: \"\\uC544\\uC9C1 \\uD654\\uBD84\\uC774 \\uC5C6\\uC5B4\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigBtn, {\n      onClick: start,\n      text: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Page4, \"TDQt/voD2O+O6VYiYEdAffqQLIk=\", false, function () {\n  return [useNavigate];\n});\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","AccountNav","Input2","useNavigate","BigBtn","jsxDEV","_jsxDEV","ptag1","display","justifyContent","fontSize","fontWeight","marginTop","marginBottom","ptag2","Page4","props","_s","plantnumber","setPlantnumber","navigate","start","alert","localStorage","setItem","data","phoneNumber","getItem","password","namebox","Profile_picture","flower_pot","console","log","fetch","method","headers","body","JSON","stringify","mode","then","response","ok","json","token","access","message","Error","catch","error","children","text1","text2","link1","fileName","_jsxFileName","lineNumber","columnNumber","style","type","value","onChange","e","target","placeholder","onClick","text","_c","$RefreshReg$"],"sources":["/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/Page4.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport AccountNav from \"../components/AccountNav\";\r\nimport { Input2 } from \"../components/AccountInput\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BigBtn from \"../components/BigBtn\";\r\n\r\n// 토큰 관련된 건 대부분 백에서 만들어주면 프론트에서 받아서 설정\r\n\r\nconst ptag1 = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  fontSize: \"calc(1.5vh + 1.25vw)\",\r\n  fontWeight: \"bold\",\r\n  marginTop: \"25vh\",\r\n  marginBottom: \"2.5vh\",\r\n};\r\n\r\nconst ptag2 = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  fontSize: \"calc(1vh + 1.25vw)\",\r\n  marginBottom: \"2.5vh\",\r\n};\r\n\r\nfunction Page4(props) {\r\n  const [plantnumber, setPlantnumber] = useState(\"\"); //화분번호 state\r\n  const navigate = useNavigate();\r\n\r\n  // 가입하기 버튼 누르면 시행되는 함수\r\n  const start = () => {\r\n    // 화분번호가 없으면\r\n    if (!plantnumber) {\r\n      alert(\"화분번호를 입력해주세요.\");\r\n    } // 화분번호가 있으면\r\n    else {\r\n      //로컬 스토리지에 데이터 저장 (왼쪽: 키, 오른쪽: 데이터)\r\n      localStorage.setItem(\"flower_pot\", plantnumber);\r\n\r\n      //백에 보낼 data 정의\r\n      const data = {\r\n        phoneNumber: localStorage.getItem(\"flower_pot\"),\r\n        password: localStorage.getItem(\"password\"),\r\n        namebox: localStorage.getItem(\"namebox\"),\r\n        Profile_picture: localStorage.getItem(\"Profile_picture\"),\r\n        flower_pot: localStorage.getItem(\"flower_pot\"),\r\n      };\r\n      console.log(data); // data 양식 확인\r\n      // 백에 회원가입 데이터 보내는 부분 !!URL 추가해야 함.\r\n      fetch(\"백엔드_URL\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\r\n          \"Content-Type\": \"application/json\", // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\r\n        },\r\n        body: JSON.stringify(data), // 보낼 데이터 json으로 변형\r\n        mode: \"cors\", // 보안 때문에 붙이기!!\r\n      })\r\n        // 중복하는 전화번호 있을 때 회원가입 안되도록 하는 로직 추가 필요\r\n        .then((response) => {\r\n          //성공적으로 백에 데이터 보냈을 때\r\n          if (response.ok) {\r\n            response.json().then((data) => {\r\n              if (data.token && data.token.access) {\r\n                alert(data.message); // 회원가입 성공\r\n                navigate(\"/5\");\r\n              } else {\r\n                throw new Error(\"회원가입에 실패하셨습니다.\"); //회원가입 실패\r\n              }\r\n            });\r\n          }\r\n          // 데이터 보내기 실패했을 때\r\n          else {\r\n            throw new Error(\"데이터를 백엔드로 보내는데 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(\"죄송합니다. 회원가입을 다시 해주세요.\");\r\n          navigate(\"/2\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AccountNav text1=\"계정만들기\" text2=\"로그인\" link1=\"/5\" />\r\n      <p style={ptag1}>화분 하단의 번호를 입력해주세요.</p>\r\n      {/* plantnumber 작성 input */}\r\n      <Input2\r\n        type=\"text\"\r\n        value={plantnumber}\r\n        onChange={(e) => setPlantnumber(e.target.value)}\r\n        placeholder=\"화분번호\"\r\n      />\r\n      <p style={ptag2}>아직 화분이 없어요.</p>\r\n      <BigBtn onClick={start} text=\"시작하기\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page4;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAG;EACZC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,QAAQ,EAAE,sBAAsB;EAChCC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,MAAM;EACjBC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,KAAK,GAAG;EACZN,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,QAAQ,EAAE,oBAAoB;EAC9BG,YAAY,EAAE;AAChB,CAAC;AAED,SAASE,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAMoB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMkB,KAAK,GAAGA,CAAA,KAAM;IAClB;IACA,IAAI,CAACH,WAAW,EAAE;MAChBI,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC;IAAA,KACG;MACH;MACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEN,WAAW,CAAC;;MAE/C;MACA,MAAMO,IAAI,GAAG;QACXC,WAAW,EAAEH,YAAY,CAACI,OAAO,CAAC,YAAY,CAAC;QAC/CC,QAAQ,EAAEL,YAAY,CAACI,OAAO,CAAC,UAAU,CAAC;QAC1CE,OAAO,EAAEN,YAAY,CAACI,OAAO,CAAC,SAAS,CAAC;QACxCG,eAAe,EAAEP,YAAY,CAACI,OAAO,CAAC,iBAAiB,CAAC;QACxDI,UAAU,EAAER,YAAY,CAACI,OAAO,CAAC,YAAY;MAC/C,CAAC;MACDK,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;MACnB;MACAS,KAAK,CAAC,SAAS,EAAE;QACfC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP;UACA,cAAc,EAAE,kBAAkB,CAAE;QACtC,CAAC;;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI,CAAC;QAAE;QAC5Be,IAAI,EAAE,MAAM,CAAE;MAChB,CAAC;MACC;MAAA,CACCC,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACfD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEhB,IAAI,IAAK;YAC7B,IAAIA,IAAI,CAACoB,KAAK,IAAIpB,IAAI,CAACoB,KAAK,CAACC,MAAM,EAAE;cACnCxB,KAAK,CAACG,IAAI,CAACsB,OAAO,CAAC,CAAC,CAAC;cACrB3B,QAAQ,CAAC,IAAI,CAAC;YAChB,CAAC,MAAM;cACL,MAAM,IAAI4B,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrC;UACF,CAAC,CAAC;QACJ;QACA;QAAA,KACK;UACH,MAAM,IAAIA,KAAK,CAAC,wBAAwB,CAAC;QAC3C;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBlB,OAAO,CAACkB,KAAK,CAACA,KAAK,CAAC;QACpB5B,KAAK,CAAC,uBAAuB,CAAC;QAC9BF,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACEd,OAAA;IAAA6C,QAAA,gBACE7C,OAAA,CAACL,UAAU;MAACmD,KAAK,EAAC,gCAAO;MAACC,KAAK,EAAC,oBAAK;MAACC,KAAK,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDpD,OAAA;MAAGqD,KAAK,EAAEpD,KAAM;MAAA4C,QAAA,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEvCpD,OAAA,CAACJ,MAAM;MACL0D,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE3C,WAAY;MACnB4C,QAAQ,EAAGC,CAAC,IAAK5C,cAAc,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAM;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACFpD,OAAA;MAAGqD,KAAK,EAAE7C,KAAM;MAAAqC,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCpD,OAAA,CAACF,MAAM;MAAC8D,OAAO,EAAE7C,KAAM;MAAC8C,IAAI,EAAC;IAAM;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACzC,EAAA,CA1EQF,KAAK;EAAA,QAEKZ,WAAW;AAAA;AAAAiE,EAAA,GAFrBrD,KAAK;AA4Ed,eAAeA,KAAK;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
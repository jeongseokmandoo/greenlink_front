{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/NotifiPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TopNav from \"../componenets/TopNav\";\nimport setting_icon from \"../assets/Setting_Icon.png\";\nimport x_icon from \"../assets/X_Icon.png\";\nimport MainNav from \"../componenets/MainNav\";\nimport { NotifiText } from \"./PlantPage1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotifiBox({\n  item\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NotifiBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.min\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotifiText, {\n        context: item.context\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = NotifiBox;\nfunction NotifiList({\n  items\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items.map(item => {\n      return /*#__PURE__*/_jsxDEV(NotifiBox, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NotifiList;\nfunction NotifiPage() {\n  _s();\n  const [items, setItems] = useState([]); // 초기값을 빈 배열로 설정\n\n  useEffect(() => {\n    fetch(\"data/mock2.json\").then(response => response.json()).then(data => setItems(data)).catch(error => console.error(error));\n  }, []); // 빈 의존성 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {\n      text: \"\\uC54C\\uB9BC\",\n      link1: \"/setting\",\n      link2: \"/plant1\",\n      icon1: setting_icon,\n      icon2: x_icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotifiList, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(NotifiPage, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c3 = NotifiPage;\nexport default NotifiPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NotifiBox\");\n$RefreshReg$(_c2, \"NotifiList\");\n$RefreshReg$(_c3, \"NotifiPage\");","map":{"version":3,"names":["React","useEffect","useState","TopNav","setting_icon","x_icon","MainNav","NotifiText","jsxDEV","_jsxDEV","NotifiBox","item","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","min","context","id","_c","NotifiList","items","map","_c2","NotifiPage","_s","setItems","fetch","then","response","json","data","catch","error","console","text","link1","link2","icon1","icon2","_c3","$RefreshReg$"],"sources":["/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/NotifiPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TopNav from \"../componenets/TopNav\";\r\nimport setting_icon from \"../assets/Setting_Icon.png\";\r\nimport x_icon from \"../assets/X_Icon.png\";\r\nimport MainNav from \"../componenets/MainNav\";\r\nimport { NotifiText } from \"./PlantPage1\";\r\n\r\nfunction NotifiBox({ item }) {\r\n  return (\r\n    <div className=\"NotifiBox\" key={item.id}>\r\n      <div class></div>\r\n      <div>\r\n        <div>{item.min}</div>\r\n        <NotifiText context={item.context} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NotifiList({ items }) {\r\n  return (\r\n    <div>\r\n      {items.map((item) => {\r\n        return <NotifiBox item={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NotifiPage() {\r\n  const [items, setItems] = useState([]); // 초기값을 빈 배열로 설정\r\n\r\n  useEffect(() => {\r\n    fetch(\"data/mock2.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => setItems(data))\r\n      .catch((error) => console.error(error));\r\n  }, []); // 빈 의존성 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\r\n\r\n  return (\r\n    <div>\r\n      <TopNav\r\n        text=\"알림\"\r\n        link1=\"/setting\"\r\n        link2=\"/plant1\"\r\n        icon1={setting_icon}\r\n        icon2={x_icon}\r\n      />\r\n      <NotifiList items={items} />\r\n\r\n      <MainNav />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotifiPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AccountNav from \"../components/AccountNav\";\nimport { Input2 } from \"../components/AccountInput\";\nimport { useState } from \"react\";\nimport BigBtn from \"../components/BigBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst to6 = {\n  textDecoration: \"none\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  fontSize: \"calc(1vh + 1.25vw)\"\n};\nfunction LoginPage(props) {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  //로그인하기 누르면 시행되는 함수\n  const login = () => {\n    //양식 잘못 입력하면\n    if (!phoneNumber || !password) {\n      alert(\"모든 값을 입력해주세요\");\n    } else if (phoneNumber.length !== 11 || !phoneNumber.startsWith(\"010\")) {\n      alert(\"전화번호를 올바른 형식으로 입력해주세요.\");\n    } else if (password.length < 8 || password.length > 12) {\n      alert(\"비밀번호는 8자 이상, 12자 이하여야 합니다.\");\n    } else if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password) || !/[A-Z]/.test(password)) {\n      alert(\"비밀번호에 특수문자와 대문자가 최소 하나 이상 포함되어야 합니다. \");\n    } //양식 잘 입력하면\n    else {\n      localStorage.setItem(\"username\", phoneNumber);\n      localStorage.setItem(\"password\", password);\n      // 로그인 버튼 클릭시 보낼 데이터\n      const data = {\n        username: localStorage.getItem(\"username\"),\n        password: localStorage.getItem(\"password\")\n      };\n      console.log(data); //data 양식 확인\n      // 백에 회원가입 데이터 보내는 부분 !!URL 추가해야 함.\n      fetch(\"백엔드_URL\", {\n        method: \"POST\",\n        headers: {\n          // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\n          \"Content-Type\": \"application/json\" // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\n        },\n\n        body: JSON.stringify(data),\n        // 보낼 데이터 json으로 변형\n        mode: \"cors\" // 보안 때문에 붙이기!!\n      })\n      //로그인 정보 확인 로직 필요\n      .then(response => {\n        //성공적으로 로그인할 때\n        if (response.ok) {\n          return response.json();\n        }\n        //로그인 실패했을 때\n        else {\n          throw new Error(\"데이터를 백엔드로 보내는데 실패했습니다.\");\n        }\n      }).then(data => {\n        localStorage.setItem(\"data\", JSON.stringify(data));\n        alert(\"로그인에 성공하셨습니다.\");\n        navigate(\"/plant1\");\n      }).catch(error => {\n        console.error(error);\n        alert(\"죄송합니다. 로그인에 실패하셨습니다.\");\n        navigate(\"/api/login\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AccountNav, {\n      text1: \"\\uB85C\\uADF8\\uC778\",\n      text2: \"\\uAC00\\uC785\\uD558\\uAE30\",\n      link1: \"/signupstep1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input2, {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"\\uC804\\uD654\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/6\",\n      style: to6,\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC5B4\\uBC84\\uB9AC\\uC168\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigBtn, {\n      onClick: login,\n      text: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"5rrqS82R4m2KYjGaSRn9SigN7Hs=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Link","useNavigate","AccountNav","Input2","useState","BigBtn","jsxDEV","_jsxDEV","to6","textDecoration","display","justifyContent","fontSize","LoginPage","props","_s","phoneNumber","setPhoneNumber","password","setPassword","navigate","login","alert","length","startsWith","test","localStorage","setItem","data","username","getItem","console","log","fetch","method","headers","body","JSON","stringify","mode","then","response","ok","json","Error","catch","error","children","text1","text2","link1","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","type","value","onChange","e","target","placeholder","to","onClick","text","_c","$RefreshReg$"],"sources":["/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AccountNav from \"../components/AccountNav\";\r\nimport { Input2 } from \"../components/AccountInput\";\r\nimport { useState } from \"react\";\r\nimport BigBtn from \"../components/BigBtn\";\r\n\r\nconst to6 = {\r\n  textDecoration: \"none\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  fontSize: \"calc(1vh + 1.25vw)\",\r\n};\r\n\r\nfunction LoginPage(props) {\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  //로그인하기 누르면 시행되는 함수\r\n  const login = () => {\r\n    //양식 잘못 입력하면\r\n    if (!phoneNumber || !password) {\r\n      alert(\"모든 값을 입력해주세요\");\r\n    } else if (phoneNumber.length !== 11 || !phoneNumber.startsWith(\"010\")) {\r\n      alert(\"전화번호를 올바른 형식으로 입력해주세요.\");\r\n    } else if (password.length < 8 || password.length > 12) {\r\n      alert(\"비밀번호는 8자 이상, 12자 이하여야 합니다.\");\r\n    } else if (\r\n      !/[!@#$%^&*(),.?\":{}|<>]/.test(password) ||\r\n      !/[A-Z]/.test(password)\r\n    ) {\r\n      alert(\r\n        \"비밀번호에 특수문자와 대문자가 최소 하나 이상 포함되어야 합니다. \"\r\n      );\r\n    } //양식 잘 입력하면\r\n    else {\r\n      localStorage.setItem(\"username\", phoneNumber);\r\n      localStorage.setItem(\"password\", password);\r\n      // 로그인 버튼 클릭시 보낼 데이터\r\n      const data = {\r\n        username: localStorage.getItem(\"username\"),\r\n        password: localStorage.getItem(\"password\"),\r\n      };\r\n      console.log(data); //data 양식 확인\r\n      // 백에 회원가입 데이터 보내는 부분 !!URL 추가해야 함.\r\n      fetch(\"백엔드_URL\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\r\n          \"Content-Type\": \"application/json\", // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\r\n        },\r\n        body: JSON.stringify(data), // 보낼 데이터 json으로 변형\r\n        mode: \"cors\", // 보안 때문에 붙이기!!\r\n      })\r\n        //로그인 정보 확인 로직 필요\r\n        .then((response) => {\r\n          //성공적으로 로그인할 때\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          //로그인 실패했을 때\r\n          else {\r\n            throw new Error(\"데이터를 백엔드로 보내는데 실패했습니다.\");\r\n          }\r\n        })\r\n        .then((data) => {\r\n          localStorage.setItem(\"data\", JSON.stringify(data));\r\n          alert(\"로그인에 성공하셨습니다.\");\r\n          navigate(\"/plant1\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(\"죄송합니다. 로그인에 실패하셨습니다.\");\r\n          navigate(\"/api/login\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AccountNav text1=\"로그인\" text2=\"가입하기\" link1=\"/signupstep1\" />\r\n      <div style={{ marginTop: \"10vh\" }}>\r\n        <Input2\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"전화번호\"\r\n        />\r\n        <Input2\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"비밀번호\"\r\n        />\r\n      </div>\r\n      <Link to=\"/6\" style={to6}>\r\n        비밀번호를 잊어버리셨나요?\r\n      </Link>\r\n      <BigBtn onClick={login} text=\"로그인하기\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/SettingPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TopNav from \"../components/TopNav\";\nimport no_icon from \"../assets/non_icon.png\";\nimport MainNav from \"../components/MainNav\";\nimport x_icon from \"../assets/X_Icon.png\";\nimport styles from \"./Setting.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport PersonalsetBtn from \"../components/PersonalsetBtn.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotifiBar = ({\n  className = \"\"\n}) => {\n  _s();\n  const [notification, setNotification] = useState(true);\n  const [buttonStyle, setButtonStyle] = useState({});\n  const handleNotification = () => {\n    setNotification(!notification);\n    if (notification) {\n      setButtonStyle({\n        border: \"4px double red\",\n        color: \"red\"\n      });\n    } else {\n      setButtonStyle({});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [\"\\uC54C\\uB9BC\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.notifibtn,\n      style: buttonStyle,\n      onClick: handleNotification,\n      children: notification ? \"알림 끄기\" : \"알림 켜기\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(NotifiBar, \"OJrZd0wDvJ0NvMPHQen6d/lK6UA=\");\n_c = NotifiBar;\nfunction SettingPage() {\n  _s2();\n  const navigate = useNavigate(\"/personal\");\n  const personallock = () => {\n    navigate(\"/personal\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {\n      className: styles.topNav,\n      text: \"\\uC124\\uC815\",\n      link1: undefined,\n      link2: \"/plant1\",\n      icon1: no_icon,\n      icon2: x_icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contents,\n      children: [/*#__PURE__*/_jsxDEV(PersonalsetBtn, {\n        text: \"\\uAC1C\\uC778/\\uBCF4\\uC548\",\n        onClick: personallock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotifiBar, {\n        className: styles.clickbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s2(SettingPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = SettingPage;\nexport default SettingPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"NotifiBar\");\n$RefreshReg$(_c2, \"SettingPage\");","map":{"version":3,"names":["React","useState","TopNav","no_icon","MainNav","x_icon","styles","useNavigate","PersonalsetBtn","jsxDEV","_jsxDEV","NotifiBar","className","_s","notification","setNotification","buttonStyle","setButtonStyle","handleNotification","border","color","children","notifibtn","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","SettingPage","_s2","navigate","personallock","main","topNav","text","link1","undefined","link2","icon1","icon2","contents","clickbox","_c2","$RefreshReg$"],"sources":["/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/pages/SettingPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TopNav from \"../components/TopNav\";\r\nimport no_icon from \"../assets/non_icon.png\";\r\nimport MainNav from \"../components/MainNav\";\r\nimport x_icon from \"../assets/X_Icon.png\";\r\nimport styles from \"./Setting.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PersonalsetBtn from \"../components/PersonalsetBtn.js\";\r\n\r\nconst NotifiBar = ({ className = \"\" }) => {\r\n  const [notification, setNotification] = useState(true);\r\n  const [buttonStyle, setButtonStyle] = useState({});\r\n\r\n  const handleNotification = () => {\r\n    setNotification(!notification);\r\n    if (notification) {\r\n      setButtonStyle({\r\n        border: \"4px double red\",\r\n        color: \"red\",\r\n      });\r\n    } else {\r\n      setButtonStyle({});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      알림\r\n      <button\r\n        className={styles.notifibtn}\r\n        style={buttonStyle}\r\n        onClick={handleNotification}\r\n      >\r\n        {notification ? \"알림 끄기\" : \"알림 켜기\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction SettingPage() {\r\n  const navigate = useNavigate(\"/personal\");\r\n  const personallock = () => {\r\n    navigate(\"/personal\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <TopNav\r\n        className={styles.topNav}\r\n        text=\"설정\"\r\n        link1={undefined}\r\n        link2=\"/plant1\"\r\n        icon1={no_icon}\r\n        icon2={x_icon}\r\n      />\r\n      <div className={styles.contents}>\r\n        <PersonalsetBtn text=\"개인/보안\" onClick={personallock} />\r\n        <NotifiBar className={styles.clickbox} />\r\n      </div>\r\n      <MainNav />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
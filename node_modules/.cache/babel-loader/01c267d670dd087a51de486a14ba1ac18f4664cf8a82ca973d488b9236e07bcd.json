{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/components/HumiBar.js\";\nimport React from \"react\";\nimport styles from \"./HumiBar.module.css\";\nimport polygon from \"../assets/polygon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst polygonstyle = {\n  backgroundImage: {\n    polygon\n  }\n};\nfunction HumidiBar({\n  humidity = 60\n}) {\n  const gaugeHeight = (100 - humidity) * 30 / 100; // 습도에 비례하여 게이지 바의 높이를 결정합니다.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gaugeContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gauge,\n        style: {\n          height: `${gaugeHeight}vh`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = HumidiBar;\nexport default HumidiBar;\nvar _c;\n$RefreshReg$(_c, \"HumidiBar\");","map":{"version":3,"names":["React","styles","polygon","jsxDEV","_jsxDEV","Fragment","_Fragment","polygonstyle","backgroundImage","HumidiBar","humidity","gaugeHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","gaugeContainer","gauge","style","height","_c","$RefreshReg$"],"sources":["/Users/jeongseogmin/Desktop/NEXT/greenlink/Greenlink/frontend/src/components/HumiBar.js"],"sourcesContent":["import React from \"react\";\nimport styles from \"./HumiBar.module.css\";\nimport polygon from \"../assets/polygon.png\";\n\nconst polygonstyle = {\n  backgroundImage: { polygon },\n};\n\nfunction HumidiBar({ humidity = 60 }) {\n  const gaugeHeight = ((100 - humidity) * 30) / 100; // 습도에 비례하여 게이지 바의 높이를 결정합니다.\n\n  return (\n    <>\n      <div></div>\n      <div className={styles.gaugeContainer}>\n        <div className={styles.gauge} style={{ height: `${gaugeHeight}vh` }} />\n      </div>\n    </>\n  );\n}\n\nexport default HumidiBar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE;IAAEN;EAAQ;AAC7B,CAAC;AAED,SAASO,SAASA,CAAC;EAAEC,QAAQ,GAAG;AAAG,CAAC,EAAE;EACpC,MAAMC,WAAW,GAAI,CAAC,GAAG,GAAGD,QAAQ,IAAI,EAAE,GAAI,GAAG,CAAC,CAAC;;EAEnD,oBACEN,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXZ,OAAA;MAAKa,SAAS,EAAEhB,MAAM,CAACiB,cAAe;MAAAN,QAAA,eACpCR,OAAA;QAAKa,SAAS,EAAEhB,MAAM,CAACkB,KAAM;QAACC,KAAK,EAAE;UAAEC,MAAM,EAAG,GAAEV,WAAY;QAAI;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA,eACN,CAAC;AAEP;AAACM,EAAA,GAXQb,SAAS;AAalB,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}